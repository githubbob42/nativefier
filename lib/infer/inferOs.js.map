{"version":3,"sources":["infer/inferOs.js"],"names":["inferPlatform","platform","inferArch","arch"],"mappings":";;;;;;AAAA;;;;;;AAEA,SAASA,aAAT,GAAyB;AACrB,QAAMC,WAAW,aAAGA,QAAH,EAAjB;AACA,QAAIA,aAAa,QAAb,IAAyBA,aAAa,OAAtC,IAAiDA,aAAa,OAAlE,EAA2E;AACvE,eAAOA,QAAP;AACH;;AAED,iCAA2BA,QAA3B;AACH;;AAED,SAASC,SAAT,GAAqB;AACjB,QAAMC,OAAO,aAAGA,IAAH,EAAb;AACA,QAAIA,SAAS,MAAT,IAAmBA,SAAS,KAAhC,EAAuC;AACnC,6CAAmCA,IAAnC;AACH;AACD,WAAOA,IAAP;AACH;;kBAEc;AACXH,mBAAeA,aADJ;AAEXE,eAAWA;AAFA,C","file":"infer/inferOs.js","sourcesContent":["import os from 'os';\n\nfunction inferPlatform() {\n    const platform = os.platform();\n    if (platform === 'darwin' || platform === 'win32' || platform === 'linux') {\n        return platform;\n    }\n\n    throw `Untested platform ${platform} detected`;\n}\n\nfunction inferArch() {\n    const arch = os.arch();\n    if (arch !== 'ia32' && arch !== 'x64') {\n        throw `Incompatible architecture ${arch} detected`;\n    }\n    return arch;\n}\n\nexport default {\n    inferPlatform: inferPlatform,\n    inferArch: inferArch\n};\n"],"sourceRoot":"/source/"}