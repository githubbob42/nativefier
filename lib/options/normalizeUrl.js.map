{"version":3,"sources":["options/normalizeUrl.js"],"names":["normalizeUrl","testUrl","normalized","parsed","parse","protocol","isURL","require_protocol","require_tld"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,SAASA,YAAT,CAAsBC,OAAtB,EAA+B;AAC3B;AACA,QAAIC,aAAaD,OAAjB;AACA,QAAME,SAAS,cAAIC,KAAJ,CAAUF,UAAV,CAAf;AACA,QAAI,CAACC,OAAOE,QAAZ,EAAsB;AAClBH,qBAAa,YAAYA,UAAzB;AACH;AACD,QAAI,CAAC,oBAAUI,KAAV,CAAgBJ,UAAhB,EAA4B,EAACK,kBAAkB,IAAnB,EAAyBC,aAAa,KAAtC,EAA5B,CAAL,EAAgF;AAC5E,8BAAoBN,UAApB;AACH;AACD,WAAOA,UAAP;AACH;;kBAEcF,Y","file":"options/normalizeUrl.js","sourcesContent":["import url from 'url';\nimport validator from 'validator';\n\nfunction normalizeUrl(testUrl) {\n    // add protocol if protocol not found\n    let normalized = testUrl;\n    const parsed = url.parse(normalized);\n    if (!parsed.protocol) {\n        normalized = 'http://' + normalized;\n    }\n    if (!validator.isURL(normalized, {require_protocol: true, require_tld: false})) {\n        throw `Your Url: \"${normalized}\" is invalid!`;\n    }\n    return normalized;\n}\n\nexport default normalizeUrl;\n"],"sourceRoot":"/source/"}